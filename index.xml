<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Whatever Flavour It Happens To Be</title>
    <link>https://akoylasar.github.io/</link>
    <description>Recent content on Whatever Flavour It Happens To Be</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 19 Jul 2022 12:00:58 +0200</lastBuildDate><atom:link href="https://akoylasar.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Calculating far plane distance in Mapbox gl-js</title>
      <link>https://akoylasar.github.io/posts/far-z-calculation/</link>
      <pubDate>Tue, 19 Jul 2022 12:00:58 +0200</pubDate>
      
      <guid>https://akoylasar.github.io/posts/far-z-calculation/</guid>
      <description>Background Im my previous post I left out a few things when talking about tranformations. This post is a follow-up on how the camera far plane in Mapbox gl-js is calculated. Correctly computing the far plane distance ensures that everything is rendered/culled properly (in particular in tilted view).
Let&amp;rsquo;s far plane The far plane is affected by the camera&amp;rsquo;s field of view, its pitch and its altitude, \(r\) (which we already covered in the previous post).</description>
    </item>
    
    <item>
      <title>An analytical solution to the integral of cos^2(theta) over a spherical surface</title>
      <link>https://akoylasar.github.io/posts/lightning-cos2-surface-integral/</link>
      <pubDate>Mon, 06 Jun 2022 13:44:51 +0200</pubDate>
      
      <guid>https://akoylasar.github.io/posts/lightning-cos2-surface-integral/</guid>
      <description>Background In his book 3 in the fantastic series Raytracing in a weekend Peter Shirley computes an integral numerically and leaves the analytical solution as an exercise.
This analytical proof is presented below.
Proof Putting everything down formally, this is what we&amp;rsquo;re tryign to compute:
$$ \iint_{\Omega} f dS $$ The integrand is a function in spherical coordinates, that is \(f(r, \theta, \phi) = \cos^2(\theta) \). Domain of integration is denoted by \(\Omega\) which is the surface of a unit sphere.</description>
    </item>
    
    <item>
      <title>A trip down the transformation pipeline in Mapbox GL-JS</title>
      <link>https://akoylasar.github.io/posts/transformation-stack/</link>
      <pubDate>Fri, 03 Jun 2022 13:44:51 +0200</pubDate>
      
      <guid>https://akoylasar.github.io/posts/transformation-stack/</guid>
      <description>In this article I will briefly explain how GL-JS renders an encoded point from a vector tile onto the screen.
Few notes I assume you already know what vector tiles are so here are few things to know about Mapbox vector tiles:
They are agnostic of geographics information. Mapbox vector tiles have a resolution of 512 pixels. They are efficiently encoded (using google protobufs) for fast transfer over web.
Let&amp;rsquo;s go!</description>
    </item>
    
  </channel>
</rss>
